{"remainingRequest":"/Users/nisit/sites/nef-house/node_modules/thread-loader/dist/cjs.js!/Users/nisit/sites/nef-house/node_modules/babel-loader/lib/index.js!/Users/nisit/sites/nef-house/src/plugins/SoundEffects.js","dependencies":[{"path":"/Users/nisit/sites/nef-house/src/plugins/SoundEffects.js","mtime":1632148739815},{"path":"/Users/nisit/sites/nef-house/node_modules/cache-loader/dist/cjs.js","mtime":1632148781129},{"path":"/Users/nisit/sites/nef-house/node_modules/thread-loader/dist/cjs.js","mtime":1632148781707},{"path":"/Users/nisit/sites/nef-house/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\nvar SoundEffects = {\n  install: function install(Vue, options) {\n    var enabled = true;\n    var sounds = {\n      'background': new Audio(require(\"../assets/sounds/background.mp3\")),\n      'voiceover': new Audio(require(\"../assets/sounds/voiceover.mp3\")),\n      'baby-happy': new Audio(require(\"../assets/sounds/character-baby-happy.mp3\")),\n      'baby-sad': new Audio(require(\"../assets/sounds/character-baby-sad.mp3\")),\n      'baby-content': new Audio(require(\"../assets/sounds/character-baby-content.mp3\")),\n      'fish-happy': new Audio(require(\"../assets/sounds/character-fish-happy.mp3\")),\n      'fish-sad': new Audio(require(\"../assets/sounds/character-fish-sad.mp3\")),\n      'fish-content': new Audio(require(\"../assets/sounds/character-fish-content.mp3\")),\n      'robot-happy': new Audio(require(\"../assets/sounds/character-robot-happy.mp3\")),\n      'robot-sad': new Audio(require(\"../assets/sounds/character-robot-sad.mp3\")),\n      'robot-content': new Audio(require(\"../assets/sounds/character-robot-content.mp3\")),\n      'dog-happy': new Audio(require(\"../assets/sounds/character-dog-happy.mp3\")),\n      'dog-sad': new Audio(require(\"../assets/sounds/character-dog-sad.mp3\")),\n      'dog-content': new Audio(require(\"../assets/sounds/character-dog-content.mp3\")),\n      'grandpa-happy': new Audio(require(\"../assets/sounds/character-grandpa-happy.mp3\")),\n      'grandpa-sad': new Audio(require(\"../assets/sounds/character-grandpa-sad.mp3\")),\n      'grandpa-content': new Audio(require(\"../assets/sounds/character-grandpa-content.mp3\"))\n    };\n\n    for (var sound in sounds) {\n      sounds[sound].mutedState = false;\n    }\n\n    sounds.background.loop = true;\n\n    var _play = function play(sound) {\n      if (typeof sounds[sound] != \"undefined\") {\n        sounds[sound].pause();\n        sounds[sound].currentTime = 0;\n        sounds[sound].play();\n\n        if (process.env.NODE_ENV == \"development\") {\n          console.log('PLAYING', sound);\n        }\n      }\n    };\n\n    var _stop = function stop(sound) {\n      if (typeof sounds[sound] != \"undefined\") {\n        sounds[sound].pause();\n        sounds[sound].currentTime = 0;\n\n        if (process.env.NODE_ENV == \"development\") {\n          console.log('STOPPED', sound);\n        }\n      }\n    };\n\n    var _mute = function mute(sound, muted) {\n      if (typeof sounds[sound] != \"undefined\") {\n        sounds[sound].currentTime = 0;\n        sounds[sound].mutedState = muted;\n        sounds[sound].muted = !(!sounds[sound].mutedState && enabled);\n\n        if (process.env.NODE_ENV == \"development\") {\n          console.log('MUTED', sound, muted);\n        }\n      }\n    };\n\n    var _toggle = function toggle() {\n      enabled = !enabled;\n\n      for (var _sound in sounds) {\n        sounds[_sound].muted = !(!sounds[_sound].mutedState && enabled);\n      }\n    };\n\n    Vue.prototype.$soundEffects = {\n      play: function play(sound) {\n        _play(sound);\n      },\n      stop: function stop(sound) {\n        _stop(sound);\n      },\n      mute: function mute(sound, muted) {\n        _mute(sound, muted);\n      },\n      toggle: function toggle() {\n        _toggle();\n      }\n    }; // Turn Sound off while debugging\n\n    if (process.env.NODE_ENV == \"development\") _toggle();\n  }\n};\nexport default SoundEffects;",{"version":3,"sources":["src/plugins/SoundEffects.js"],"names":["SoundEffects","install","Vue","options","enabled","sounds","Audio","require","sound","mutedState","background","loop","play","pause","currentTime","process","env","NODE_ENV","console","log","stop","mute","muted","toggle","prototype","$soundEffects"],"mappings":"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","sourceRoot":"/Users/nisit/sites/nef-house","sourcesContent":["const SoundEffects = {\n    install(Vue, options) {\n        var enabled = true;\n\n        const sounds = {\n            'background': new Audio(require(\"../assets/sounds/background.mp3\")),\n            'voiceover': new Audio(require(\"../assets/sounds/voiceover.mp3\")),\n            'baby-happy': new Audio(require(\"../assets/sounds/character-baby-happy.mp3\")),\n            'baby-sad': new Audio(require(\"../assets/sounds/character-baby-sad.mp3\")),\n            'baby-content': new Audio(require(\"../assets/sounds/character-baby-content.mp3\")),\n            'fish-happy': new Audio(require(\"../assets/sounds/character-fish-happy.mp3\")),\n            'fish-sad': new Audio(require(\"../assets/sounds/character-fish-sad.mp3\")),\n            'fish-content': new Audio(require(\"../assets/sounds/character-fish-content.mp3\")),\n            'robot-happy': new Audio(require(\"../assets/sounds/character-robot-happy.mp3\")),\n            'robot-sad': new Audio(require(\"../assets/sounds/character-robot-sad.mp3\")),\n            'robot-content': new Audio(require(\"../assets/sounds/character-robot-content.mp3\")),\n            'dog-happy': new Audio(require(\"../assets/sounds/character-dog-happy.mp3\")),\n            'dog-sad': new Audio(require(\"../assets/sounds/character-dog-sad.mp3\")),\n            'dog-content': new Audio(require(\"../assets/sounds/character-dog-content.mp3\")),\n            'grandpa-happy': new Audio(require(\"../assets/sounds/character-grandpa-happy.mp3\")),\n            'grandpa-sad': new Audio(require(\"../assets/sounds/character-grandpa-sad.mp3\")),\n            'grandpa-content': new Audio(require(\"../assets/sounds/character-grandpa-content.mp3\")),\n        };\n\n        for(let sound in sounds) {\n            sounds[sound].mutedState = false;\n        }\n\n        sounds.background.loop = true;\n\n        var play = (sound) => {\n            if(typeof sounds[sound] != \"undefined\") {\n                sounds[sound].pause();\n                sounds[sound].currentTime = 0;\n                sounds[sound].play();\n\n                if(process.env.NODE_ENV == \"development\") {\n                    console.log('PLAYING', sound);\n                }\n            }\n        };\n\n        var stop = (sound) => {\n            if(typeof sounds[sound] != \"undefined\") {\n                sounds[sound].pause();\n                sounds[sound].currentTime = 0;\n\n                if(process.env.NODE_ENV == \"development\") {\n                    console.log('STOPPED', sound);\n                }\n            }\n        };\n\n        var mute = (sound, muted) => {\n            if(typeof sounds[sound] != \"undefined\") {\n                sounds[sound].currentTime = 0;\n                sounds[sound].mutedState = muted;\n                sounds[sound].muted = !(!sounds[sound].mutedState && enabled);\n\n                if(process.env.NODE_ENV == \"development\") {\n                    console.log('MUTED', sound, muted);\n                }\n            }\n        };\n\n        var toggle = () => {\n            enabled = !enabled;\n            for(let sound in sounds) {\n                sounds[sound].muted = !(!sounds[sound].mutedState && enabled);\n            }\n        };\n\n        Vue.prototype.$soundEffects = {\n            play(sound) { play(sound); },\n            stop(sound) { stop(sound); },\n            mute(sound, muted) { mute(sound, muted); },\n            toggle() { toggle(); }\n        }\n\n        // Turn Sound off while debugging\n        if(process.env.NODE_ENV == \"development\") toggle();\n    }\n};\n\nexport default SoundEffects;\n"]}]}