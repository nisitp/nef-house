{"remainingRequest":"/Users/nisit/sites/nef-house/node_modules/babel-loader/lib/index.js!/Users/nisit/sites/nef-house/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nisit/sites/nef-house/src/views/Result.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nisit/sites/nef-house/src/views/Result.vue","mtime":1635782278626},{"path":"/Users/nisit/sites/nef-house/node_modules/cache-loader/dist/cjs.js","mtime":1632148781129},{"path":"/Users/nisit/sites/nef-house/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/nisit/sites/nef-house/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/nisit/sites/nef-house/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapGetters } from 'vuex';\nexport default {\n  // Local variables\n  data: function data() {\n    return {\n      selectedAnswer: null\n    };\n  },\n  // Computed variables are set whenever one of the variables involved changes value\n  computed: _objectSpread({\n    // questionId: The id of the question (ex: 3rd question out of 10)\n    questionId: function questionId() {\n      return this.$route.params.question;\n    },\n    // correct: A boolean indicating whether was answered correctly or not\n    correct: function correct() {\n      return this.answers[this.questionId];\n    },\n    // buttonText: Text that's displayed in next question button\n    // If there are questions left, returns \"Próxima pregunta\", otherwise returns \"Ver los resultados\"\n    buttonText: function buttonText() {\n      return this.questionId + 1 >= this.questions.length ? \"Ver los resultados\" : \"Próxima pregunta\";\n    },\n    // title: The description indicating whether the question was answered correctly, with different responses for each character\n    title: function title() {\n      switch (this.character) {\n        case 'baby':\n          return this.correct ? \"Ehehe!!!<br>¡LO HICISTE BIEN!\" : \"Wah wah<br>¡ESA NO ES LA<br>RESPUESTA CORRECTA!\";\n\n        case 'fish':\n          return this.correct ? \"Blub blub!!!<br>¡LO HICISTE BIEN!\" : \"Bloop bloop<br>That's not the<br>respuesta cprrecta!\";\n\n        case 'robot':\n          return this.correct ? \"Beep boop!!!<br>¡LO HICISTE BIEN!\" : \"Beep beep<br>¡Esa no es la<br>respuesta cprrecta!\";\n\n        case 'dog':\n          return this.correct ? \"Wroof Wroof!!!<br>¡LO HICISTE BIEN!\" : \"Bow Wow<br>¡Esa no es la<br>respuesta cprrecta!\";\n\n        case 'grandpa':\n          return this.correct ? \"Ho ho!!!<br>¡LO HICISTE BIEN!\" : \"Ho Hum<br>¡Esa no es la<br>respuesta cprrecta!\";\n      }\n    }\n  }, mapState(['character', 'answers']), mapGetters(['questions', 'score'])),\n  // Functions that can be called\n  methods: {\n    // Navigates to the next question\n    // If there are no questions left, navigates to the final results page\n    nextQuestion: function nextQuestion() {\n      if (this.questionId + 1 >= this.questions.length) {\n        this.$router.push({\n          name: 'final'\n        });\n        this.$soundEffects.play(this.character + '-content');\n      } else {\n        this.$router.push({\n          name: 'question',\n          params: {\n            question: this.questionId + 1\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Result.vue"],"names":[],"mappings":";;;;;;;;;;;AAUA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA;AACA,MAFA,kBAEA;AACA,WAAA;AACA,sBAAA;AADA,KAAA;AAGA,GANA;AAQA;AACA;AACA;AACA,cAFA,wBAEA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA;AACA,KAJA;AAMA;AACA,WAPA,qBAOA;AACA,aAAA,KAAA,OAAA,CAAA,KAAA,UAAA,CAAA;AACA,KATA;AAWA;AACA;AACA,cAbA,wBAaA;AACA,aAAA,KAAA,UAAA,GAAA,CAAA,IAAA,KAAA,SAAA,CAAA,MAAA,GAAA,oBAAA,GAAA,kBAAA;AACA,KAfA;AAiBA;AACA,SAlBA,mBAkBA;AACA,cAAA,KAAA,SAAA;AACA,aAAA,MAAA;AACA,iBAAA,KAAA,OAAA,GACA,+BADA,GAEA,iDAFA;;AAGA,aAAA,MAAA;AACA,iBAAA,KAAA,OAAA,GACA,mCADA,GAEA,sDAFA;;AAGA,aAAA,OAAA;AACA,iBAAA,KAAA,OAAA,GACA,mCADA,GAEA,mDAFA;;AAGA,aAAA,KAAA;AACA,iBAAA,KAAA,OAAA,GACA,qCADA,GAEA,iDAFA;;AAGA,aAAA,SAAA;AACA,iBAAA,KAAA,OAAA,GACA,+BADA,GAEA,gDAFA;AAlBA;AAsBA;AAzCA,KA4CA,SAAA,CACA,WADA,EAEA,SAFA,CAAA,CA5CA,EAkDA,WAAA,CACA,WADA,EAEA,OAFA,CAAA,CAlDA,CATA;AAiEA;AACA,WAAA;AACA;AACA;AACA,gBAHA,0BAGA;AACA,UAAA,KAAA,UAAA,GAAA,CAAA,IAAA,KAAA,SAAA,CAAA,MAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,gBAAA;AAAA,SAAA;AACA,aAAA,aAAA,CAAA,IAAA,CAAA,KAAA,SAAA,GAAA,UAAA;AACA,OAHA,MAGA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,gBAAA,UAAA;AAAA,kBAAA;AAAA,sBAAA,KAAA,UAAA,GAAA;AAAA;AAAA,SAAA;AACA;AACA;AAVA;AAlEA,CAAA","sourcesContent":["<template>\n    <div class=\"result\" :class=\"{'result--wrong':!correct}\">\n        <h1 class=\"result__title\" :class=\"'result__title--'+character\" v-html=\"title\"></h1>\n        <p class=\"result__desc\" v-html=\"this.questions[this.questionId].result\"></p>\n        <p class=\"result__score\"><i class=\"fa fa-leaf\" aria-hidden=\"true\"></i> Puntuación: {{score}}</p>\n        <a class=\"result__next-question\" href=\"#\" @click.prevent=\"nextQuestion()\">{{buttonText}}</a>\n    </div>\n</template>\n\n<script>\n    import { mapState, mapGetters } from 'vuex'\n\n    export default {\n        // Local variables\n        data() {\n            return {\n                selectedAnswer: null,\n            };\n        },\n\n        // Computed variables are set whenever one of the variables involved changes value\n        computed: {\n            // questionId: The id of the question (ex: 3rd question out of 10)\n            questionId() {\n                return this.$route.params.question;\n            },\n\n            // correct: A boolean indicating whether was answered correctly or not\n            correct() {\n                return this.answers[this.questionId];\n            },\n\n            // buttonText: Text that's displayed in next question button\n            // If there are questions left, returns \"Próxima pregunta\", otherwise returns \"Ver los resultados\"\n            buttonText() {\n                return this.questionId + 1 >= this.questions.length ? \"Ver los resultados\" : \"Próxima pregunta\";\n            },\n\n            // title: The description indicating whether the question was answered correctly, with different responses for each character\n            title() {\n                switch(this.character) {\n                    case 'baby':\n                        return this.correct\n                        ? \"Ehehe!!!<br>¡LO HICISTE BIEN!\"\n                        : \"Wah wah<br>¡ESA NO ES LA<br>RESPUESTA CORRECTA!\";\n                    case 'fish':\n                        return this.correct\n                        ? \"Blub blub!!!<br>¡LO HICISTE BIEN!\"\n                        : \"Bloop bloop<br>That's not the<br>respuesta cprrecta!\";\n                    case 'robot':\n                        return this.correct\n                        ? \"Beep boop!!!<br>¡LO HICISTE BIEN!\"\n                        : \"Beep beep<br>¡Esa no es la<br>respuesta cprrecta!\";\n                    case 'dog':\n                        return this.correct\n                        ? \"Wroof Wroof!!!<br>¡LO HICISTE BIEN!\"\n                        : \"Bow Wow<br>¡Esa no es la<br>respuesta cprrecta!\";\n                    case 'grandpa':\n                        return this.correct\n                        ? \"Ho ho!!!<br>¡LO HICISTE BIEN!\"\n                        : \"Ho Hum<br>¡Esa no es la<br>respuesta cprrecta!\";\n                }\n            },\n\n            // Gets state properties for listed variables\n            ...mapState([\n                'character',\n                'answers'\n            ]),\n\n            // Generates getter functions for listed variables\n            ...mapGetters([\n                'questions',\n                'score'\n            ]),\n        },\n\n        // Functions that can be called\n        methods: {\n            // Navigates to the next question\n            // If there are no questions left, navigates to the final results page\n            nextQuestion() {\n                if (this.questionId + 1 >= this.questions.length) {\n                    this.$router.push({ name: 'final' });\n                    this.$soundEffects.play(this.character + '-content');\n                } else {\n                    this.$router.push({ name: 'question', params: { question: this.questionId + 1 } });\n                }\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@/styles/utils.scss\";\n\n    .result {\n        padding: 40px;\n        height: calc(100% - 80px);\n        width: 100%;\n        box-sizing: border-box;\n        background-color: $color-green;\n        color: $color-white;\n        text-align: center;\n\n        @include bp(xl) {\n            position: absolute;\n        }\n\n        &--wrong {\n            background-color: $color-alt-orange;\n\n            .result__title {\n                &--baby { background-image: url('../assets/characters/character-baby-sad.svg'); }\n                &--fish { background-image: url('../assets/characters/character-fish-sad.svg'); }\n                &--robot { background-image: url('../assets/characters/character-robot-sad.svg'); }\n                &--dog { background-image: url('../assets/characters/character-dog-sad.svg'); }\n                &--grandpa { background-image: url('../assets/characters/character-grandpa-sad.svg'); }\n            }\n        }\n\n        &__title {\n            font-family: $font-headline-sans-serif;\n            text-transform: uppercase;\n            font-size: 20px;\n            line-height: 1.1em;\n            margin: 0px 0px 15px 0px;\n            padding-top: 150px;\n            background-repeat: no-repeat;\n            background-size: 130px auto;\n            background-position: center top;\n\n            &--baby { background-image: url('../assets/characters/character-baby-happy.svg'); }\n            &--fish { background-image: url('../assets/characters/character-fish-happy.svg'); }\n            &--robot { background-image: url('../assets/characters/character-robot-happy.svg'); }\n            &--dog { background-image: url('../assets/characters/character-dog-happy.svg'); }\n            &--grandpa { background-image: url('../assets/characters/character-grandpa-happy.svg'); }\n        }\n\n        &__desc {\n         //   font-size: 10px;\n         //   line-height: 1.3em;\n            margin: 0px 0px 40px 0px;\n        }\n\n        &__score {\n            color: $color-white;\n            font-size: 18px;\n            text-transform: uppercase;\n            font-weight: bold;\n            margin: 0;\n\n            & > i {\n                margin-right: 5px;\n            }\n        }\n\n        &__next-question {\n            @include button($color-orange);\n            font-size: 12px;\n            margin-top: 40px;\n            width: 100%;            \n        }\n    }\n</style>\n"],"sourceRoot":"src/views"}]}