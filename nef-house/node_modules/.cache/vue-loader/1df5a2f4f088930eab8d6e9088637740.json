{"remainingRequest":"/Users/nisit/sites/nef-house/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nisit/sites/nef-house/src/views/Question.vue?vue&type=style&index=0&id=29b06b20&lang=scss&scoped=true","dependencies":[{"path":"/Users/nisit/sites/nef-house/src/views/Question.vue","mtime":1635780479520},{"path":"/Users/nisit/sites/nef-house/node_modules/css-loader/index.js","mtime":1632148780408},{"path":"/Users/nisit/sites/nef-house/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/Users/nisit/sites/nef-house/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nisit/sites/nef-house/node_modules/sass-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/nisit/sites/nef-house/node_modules/cache-loader/dist/cjs.js","mtime":1632148781129},{"path":"/Users/nisit/sites/nef-house/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    @import \"@/styles/utils.scss\";\n\n    .question {\n        padding: 40px;\n        height: calc(100% - 80px);\n        background-color: $color-cyan;\n        color: $color-white;\n\n        @include bp(xl) {\n            position: absolute;\n            width: 100%;\n            box-sizing: border-box;\n        }\n\n        &__title {\n            position: absolute;\n            bottom: 0px;\n            font-family: $font-headline-sans-serif;\n            text-transform: uppercase;\n            font-size: 20px;\n            line-height: 1.1em;\n            margin: 0px 0px 15px 0px;\n            padding-left: 70px;\n            background-repeat: no-repeat;\n            background-size: 55px 53px;\n            background-position: left center;\n\n            &__parent {\n                position: relative;\n                height: 55px;\n                margin-bottom: 5px;\n            }\n\n            &--baby {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-baby-content.svg');\n                background-repeat: no-repeat;\n            }\n            &--fish {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-fish-content.svg');\n                background-repeat: no-repeat;\n            }\n            &--robot {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-robot-content.svg');\n                background-repeat: no-repeat;\n            }\n            &--dog {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-dog-content.svg');\n                background-repeat: no-repeat;\n            }\n            &--grandpa {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-grandpa-content.svg');\n                background-repeat: no-repeat;\n            }\n        }\n\n        &__desc {\n            font-size: 10px;\n            line-height: 1.3em;\n            margin: 0px 0px 20px 0px;\n        }\n\n        &__hr {\n            border: none;\n            border-bottom: 1px solid $color-white;\n            margin: 0px 0px 20px 0px;\n        }\n\n        &__progress {\n            font-size: 9px;\n            text-transform: uppercase;\n            margin: 0px 0px 0px 0px;\n            font-weight: normal;\n        }\n\n        &__question {\n            font-size: 14px;\n            line-height: 1.1em;\n            margin: 0px 0px 15px 0px;\n            font-weight: normal;\n        }\n\n        &__answers {\n            padding: 0;\n            margin: 0;\n            list-style: none;\n            display: none;\n\t\t\t.fa-circle-o{\n\t\t\t\tfont-family: \"Font Awesome 5px Free\";\n\t\t\t\tfont-size:15px;\n\t\t\t\twidth:15px;\n\t\t\t\theight:15px;\n\t\t\t}\n\t\t\t.circle-o{\n\t\t\t\twidth:13px;\n\t\t\t\theight:13px;\n\t\t\t\tbackground-image: url('../assets/NEF_checkbox.svg');\n\t\t\t\tbackground-size:cover;\n\t\t\t}\n\t\t\t.check-circle{\n\t\t\t\twidth:13px;\n\t\t\t\theight:13px;\n\t\t\t\tbackground-image: url('../assets/NEF_checkbox_active.svg');\n\t\t\t\tbackground-size:cover;\n\t\t\t}\n            &__active {\n                display: inline;\n            }\n        }\n\n        &__number {\n            margin: 0;\n            list-style: none;\n            display: none;\n            border: 0;\n            text-align: center;\n            color: #fff;\n            font-size: 18px;\n            background: #0099a9;\n            background-image: linear-gradient(to left, white 100%, #0099a9 0%);\n            background-image: -webkit-linear-gradient(to left, white 100%, #0099a9 0%);\n            background-image: linear-gradient(to left, white 100%, #0099a9 0%);\n            background-position: bottom;\n            background-size: 100px 1px;\n            background-repeat: repeat-x;\n            width: 100px;\n            background-position-x: -20px;\n\n            &__active {\n                display: inline;\n            }\n        }\n\n        &__answer {\n            clear: both;\n            font-size: 13px;\n            cursor: pointer;\n//            margin: 0px 0px 15px 0px;\n//            height: 22px;\n            line-height: 15px;\n\n            & > i {\n                margin-right: 5px;\n            }\n\n            &--selected {\n                & > i {\n                    color: $color-orange;\n                }\n            }\n        }\n\n        &__limit {\n            padding: 0;\n            margin: 0;\n            color: #fff;\n            list-style: none;\n            display: none;\n\n            &__active {\n                display: inline;\n\n                &__underline {\n                    display: block;\n                }\n            }\n        }\n\n        &__submit {\n            @include button($color-orange);\n            \n            font-size: 12px;\n            margin-top: 10px;\n        }\n\n        &__score {\n            color: $color-green;\n            font-size: 12px;\n            text-transform: uppercase;\n            margin-top: 20px;\n\t\t\tfont-weight:bold;\n            & > i {\n                margin-right: 5px;\n            }\n        }\n\n        &__reset {\n            position: absolute;\n            top: 5px;\n            right: 5px;\n            font-size: 8px;\n            i {\n      \t\t\t\tdisplay:inline-block;\n      \t\t\t\ttext-align:center;\n      \t\t\t\tpadding-right: .5em;\n            }\n            & > a {\n                color: $color-orange;\n                font-size: 12px;\n                text-transform: uppercase;\n                font-weight: bold;\n                text-decoration: none;\n\n                &:hover {\n                    text-decoration: underline;\n                }\n            }\n        }\n        input[type=text]::-ms-clear{\n\t\t\tdisplay:none;\n\t\t}\n    }\n\n    .answer {\n//        float: left;\n//        max-width: 200px;\n    }\n\n    .fa {\n        float: left;\n    }\n",{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6NA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Question.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"question\">\n        \n        <div class=\"question__title__parent\">\n            <div :class=\"'question__title--' + character\"></div>\n            <h1 class=\"question__title\">{{questions[questionId].category}}</h1>\n        </div>\n        <!--<p class=\"question__desc\"></p>-->\n        <hr class=\"question__hr\">\n        <h3 class=\"question__progress\">Pregunta {{questionId + 1}} De {{questionsCount}}</h3>\n        <h2 class=\"question__question\" v-html=\"question\"></h2>\n        <ul class=\"question__answers\" :class=\"{'question__answers__active' : isChoice}\">\n            <li v-for=\"answer in possibleAnswers\" class=\"question__answer\" :class=\"{'question__answer--selected': selectedAnswer == answer.i}\" @click=\"selectAnswer(answer)\">\n                <i class=\"fa\"\t :class=\"{'circle-o': selectedAnswer != answer.i, 'check-circle': selectedAnswer == answer.i}\" aria-hidden=\"true\"></i>\n                <div class=\"answer\" >{{answer.a}}</div>\n                <br>\n            </li>\n        </ul>\n        <input type=\"number\" class=\"question__number\" :class=\"{'question__number__active' : isNumber}\" v-model.number=\"numberAnswer\" max=\"9999\"/>\n        <input @change=\"submitDisabled\" class=\"question__limit\" type=\"text\" :class=\"{'question__limit__active' : isLimit}\" v-bind:maxlength=\"questions[questionId].maxLength\" :style=\"styleLimitAnswer\" v-model.text=\"limitAnswer\"/>\n        <div class=\"question__limit\" :class=\"{'question__limit__active__underline' : isLimit}\" :style=\"styleLimitUnderline\"> </div>\n        <button :disabled=\"submitDisabled()\" class=\"question__submit\" href=\"#\" @click.prevent=\"submitAnswer()\">¡ENVIAR LA RESPUESTA!</button>\n        <p class=\"question__score\"><i class=\"fa fa-leaf\" aria-hidden=\"true\"></i> PUNTUACIÓN: {{score}}</p>\n        <p class=\"question__reset\"><a href=\"#\" @click.prevent=\"startOver()\"><i class=\"fas fa-redo\"></i>Comenzar de nuevo</a></p>\n    </div>\n</template>\n\n<script>\n    import { mapState, mapGetters } from 'vuex'\n\n    export default {\n        // Local Variables\n        data() {\n            return {\n                isChoice: false,\n                isLimit: false,\n                isNumber: false,\n                tick: 0,\n                selectedAnswer: null,\n                numberAnswer: 0,\n                limitAnswer: \"\",\n                submitEnabled: false,\n            };\n        },\n        mounted() {\n            document.getElementsByClassName(\"quiz\")[0].classList.remove(\"ad\");\n        },\n\n        watch: {\n            // Whenever the id of the question changes, ticks and changes the type of question displayed\n            tick() {\n                if (this.questions[this.questionId].type === \"choice\") {\n                    this.isChoice = true;\n                    this.isLimit = false;\n                    this.isNumber = false;\n                } else if (this.questions[this.questionId].type === \"limit\") {\n                    this.isChoice = false;\n                    this.isLimit = true;\n                    this.isNumber = false;\n                } else if (this.questions[this.questionId].type === \"number\") {\n                    this.isChoice = false;\n                    this.isLimit = false;\n                    this.isNumber = true;\n                } else {\n                    console.log(\"ERROR: Question did not have a type\");\n                    this.isChoice = false;\n                    this.isLimit = false;\n                    this.isNumber = false;\n                }\n            },\n        },\n\n        // Computed variables are set whenever one of the variables involved changes value\n        computed: {\n            // questionsCount: Number of questions in total\n            questionsCount() {\n                return this.questions.length;\n            },\n\n            // questionId: The id of the question (ex: 3rd question out of 10)\n            questionId() {\n                this.tick += 1;\n                let id = this.$route.params.question;\n                return typeof this.questions[id] != \"undefined\"\n                    ? id\n                    : null;\n            },\n\n            // question: The question text\n            // If the question does not exist, returns an empty string\n            question() {\n                return this.questionId === null\n                    ? \"\"\n                    : this.questions[this.questionId].question;\n            },\n\n            // possibleAnswers: All possible answers of a multiple choice question\n            // Returns the answers in a random order\n            possibleAnswers() {\n                if (this.questionId != null) {\n                    if (this.questions[this.questionId].type === \"choice\") {\n                        return this.questions[this.questionId].answers\n                        .map((a, i) => ({i: i, a: a}))\n                        .map((a) => [Math.random(), a])\n                        .map((a) => a[1]);\n                    }\n                }\n\n                return [];\n            },\n\n            // If the character becomes null, returns to the starting page\n            redirect() {\n                if(this.character === null) return '/quiz';\n                return null;\n            },\n            \n            // Styles limit questions\n            styleLimitAnswer() {\n                return {\n                    paddingLeft: ((225 - ((this.questions[this.questionId].maxLength - 1) * 11) - ((this.questions[this.questionId].maxLength) * 18)) / (this.questions[this.questionId].maxLength + 1)) + \"px\",\n                    letterSpacing: (((235 - (this.questions[this.questionId].maxLength) * 11) / (this.questions[this.questionId].maxLength))) + \"px\",\n                    border: 0,\n                    margin: 0,\n                    fontFamily: '\"Lucida Console\", Lucida, monospace',\n                    fontStyle: \"bold\",\n                    fontSize: 18 + \"px\",\n                    background: \"transparent\",\n                    width: 235 + \"px\",\n                }\n            },\n\n            // Styles the underline of limit questions\n            styleLimitUnderline() {\n                return {\n                    background: \"#0099a9\",\n                    backgroundImage: \"linear-gradient(to left, white 70%, #0099a9 0%)\",\n                    backgroundPosition: \"bottom\",\n                    backgroundSize: (235 / (this.questions[this.questionId].maxLength)) + \"px \" + 1 + \"px\",\n                    backgroundRepeat: \"repeat-x\",\n                    backgroundPositionX: (.7 * (235 / (this.questions[this.questionId].maxLength))) + \"px\",\n                    width: 230 + \"px\",\n                    height: 1 + \"px\",\n                }\n            },            \n\n            // correct: A boolean indicating whether was answered correctly or not\n            correct() {\n                return this.answers[this.questionId];\n            },\n\n            // Gets state properties for listed variables\n            ...mapState([\n                'character',\n                'answers'\n            ]),\n\n            // Generates getter functions for listed variables\n            ...mapGetters([\n                'questions',\n                'score'\n            ]),\n        },\n\n        // Functions that can be called\n        methods: {\n            // Selects an answer to the question\n            // answer: id of the answer to be selected\n            selectAnswer(answer) {\n                this.answerFilled = true;              \n                this.selectedAnswer = answer.i;\n                this.answerDesc = answer.a\n            },\n            \n            submitDisabled() {\n                if(this.isNumber) return false;                \n                if (this.isChoice) {\n                  return (this.answerFilled !== true);\n                }\n\n                // otherwise we're dealing with an entered field\n                return !this.limitAnswer.length;\n                \n            },\n            \n\n            // Submits the selected answer, thereby calling the result for the question\n            submitAnswer() {\n                if (this.selectedAnswer !== null) {\n                    this.$store.commit('setAnswer', {\n                        question: this.questionId,\n                        answer: this.answerDesc\n                    });\n                } else if (this.questions[this.questionId].type == \"number\") {\n                    this.$store.commit('setAnswer', {\n                        question: this.questionId,\n                        answer: this.numberAnswer\n                    });\n                } else if (this.questions[this.questionId].type == \"limit\") {\n                    this.$store.commit('setAnswer', {\n                        question: this.questionId,\n                        answer: this.limitAnswer.toLowerCase()\n                    });\n                }\n\n                this.$soundEffects.play(this.character + '-' + (this.correct ? 'happy' : 'sad'));\n\n                this.$router.push({ name: 'result', params: { question: this.questionId } });\n            },\n\n            // Returns to character select\n            startOver() {\n                this.$store.commit('resetCharacter');\n                this.$store.commit('resetAnswers');\n                this.$router.push({ name: 'characterSelect' });\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@/styles/utils.scss\";\n\n    .question {\n        padding: 40px;\n        height: calc(100% - 80px);\n        background-color: $color-cyan;\n        color: $color-white;\n\n        @include bp(xl) {\n            position: absolute;\n            width: 100%;\n            box-sizing: border-box;\n        }\n\n        &__title {\n            position: absolute;\n            bottom: 0px;\n            font-family: $font-headline-sans-serif;\n            text-transform: uppercase;\n            font-size: 20px;\n            line-height: 1.1em;\n            margin: 0px 0px 15px 0px;\n            padding-left: 70px;\n            background-repeat: no-repeat;\n            background-size: 55px 53px;\n            background-position: left center;\n\n            &__parent {\n                position: relative;\n                height: 55px;\n                margin-bottom: 5px;\n            }\n\n            &--baby {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-baby-content.svg');\n                background-repeat: no-repeat;\n            }\n            &--fish {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-fish-content.svg');\n                background-repeat: no-repeat;\n            }\n            &--robot {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-robot-content.svg');\n                background-repeat: no-repeat;\n            }\n            &--dog {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-dog-content.svg');\n                background-repeat: no-repeat;\n            }\n            &--grandpa {\n                height: 55px;\n                width: 53px;\n                background-image: url('../assets/characters/character-grandpa-content.svg');\n                background-repeat: no-repeat;\n            }\n        }\n\n        &__desc {\n            font-size: 10px;\n            line-height: 1.3em;\n            margin: 0px 0px 20px 0px;\n        }\n\n        &__hr {\n            border: none;\n            border-bottom: 1px solid $color-white;\n            margin: 0px 0px 20px 0px;\n        }\n\n        &__progress {\n            font-size: 9px;\n            text-transform: uppercase;\n            margin: 0px 0px 0px 0px;\n            font-weight: normal;\n        }\n\n        &__question {\n            font-size: 14px;\n            line-height: 1.1em;\n            margin: 0px 0px 15px 0px;\n            font-weight: normal;\n        }\n\n        &__answers {\n            padding: 0;\n            margin: 0;\n            list-style: none;\n            display: none;\n\t\t\t.fa-circle-o{\n\t\t\t\tfont-family: \"Font Awesome 5px Free\";\n\t\t\t\tfont-size:15px;\n\t\t\t\twidth:15px;\n\t\t\t\theight:15px;\n\t\t\t}\n\t\t\t.circle-o{\n\t\t\t\twidth:13px;\n\t\t\t\theight:13px;\n\t\t\t\tbackground-image: url('../assets/NEF_checkbox.svg');\n\t\t\t\tbackground-size:cover;\n\t\t\t}\n\t\t\t.check-circle{\n\t\t\t\twidth:13px;\n\t\t\t\theight:13px;\n\t\t\t\tbackground-image: url('../assets/NEF_checkbox_active.svg');\n\t\t\t\tbackground-size:cover;\n\t\t\t}\n            &__active {\n                display: inline;\n            }\n        }\n\n        &__number {\n            margin: 0;\n            list-style: none;\n            display: none;\n            border: 0;\n            text-align: center;\n            color: #fff;\n            font-size: 18px;\n            background: #0099a9;\n            background-image: linear-gradient(to left, white 100%, #0099a9 0%);\n            background-image: -webkit-linear-gradient(to left, white 100%, #0099a9 0%);\n            background-image: linear-gradient(to left, white 100%, #0099a9 0%);\n            background-position: bottom;\n            background-size: 100px 1px;\n            background-repeat: repeat-x;\n            width: 100px;\n            background-position-x: -20px;\n\n            &__active {\n                display: inline;\n            }\n        }\n\n        &__answer {\n            clear: both;\n            font-size: 13px;\n            cursor: pointer;\n//            margin: 0px 0px 15px 0px;\n//            height: 22px;\n            line-height: 15px;\n\n            & > i {\n                margin-right: 5px;\n            }\n\n            &--selected {\n                & > i {\n                    color: $color-orange;\n                }\n            }\n        }\n\n        &__limit {\n            padding: 0;\n            margin: 0;\n            color: #fff;\n            list-style: none;\n            display: none;\n\n            &__active {\n                display: inline;\n\n                &__underline {\n                    display: block;\n                }\n            }\n        }\n\n        &__submit {\n            @include button($color-orange);\n            \n            font-size: 12px;\n            margin-top: 10px;\n        }\n\n        &__score {\n            color: $color-green;\n            font-size: 12px;\n            text-transform: uppercase;\n            margin-top: 20px;\n\t\t\tfont-weight:bold;\n            & > i {\n                margin-right: 5px;\n            }\n        }\n\n        &__reset {\n            position: absolute;\n            top: 5px;\n            right: 5px;\n            font-size: 8px;\n            i {\n      \t\t\t\tdisplay:inline-block;\n      \t\t\t\ttext-align:center;\n      \t\t\t\tpadding-right: .5em;\n            }\n            & > a {\n                color: $color-orange;\n                font-size: 12px;\n                text-transform: uppercase;\n                font-weight: bold;\n                text-decoration: none;\n\n                &:hover {\n                    text-decoration: underline;\n                }\n            }\n        }\n        input[type=text]::-ms-clear{\n\t\t\tdisplay:none;\n\t\t}\n    }\n\n    .answer {\n//        float: left;\n//        max-width: 200px;\n    }\n\n    .fa {\n        float: left;\n    }\n</style>\n\n"]}]}